{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para adicionar token automaticamente\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptor para tratar respostas e erros\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Serviços específicos\nexport const authService = {\n  login: (email, senha) => api.post('/auth/login', {\n    email,\n    senha\n  }),\n  register: (nome, email, senha) => api.post('/auth/register', {\n    nome,\n    email,\n    senha\n  }),\n  verify: () => api.get('/auth/verify')\n};\nexport const pacientesService = {\n  list: params => api.get('/pacientes', {\n    params\n  }),\n  get: id => api.get(`/pacientes/${id}`),\n  create: data => api.post('/pacientes', data),\n  update: (id, data) => api.put(`/pacientes/${id}`, data),\n  delete: id => api.delete(`/pacientes/${id}`)\n};\nexport const avaliacoesService = {\n  list: params => api.get('/avaliacoes', {\n    params\n  }),\n  get: id => api.get(`/avaliacoes/${id}`),\n  create: data => api.post('/avaliacoes', data),\n  update: (id, data) => api.put(`/avaliacoes/${id}`, data),\n  delete: id => api.delete(`/avaliacoes/${id}`),\n  getTestes: id => api.get(`/avaliacoes/${id}/testes`)\n};\nexport const tabelasService = {\n  list: () => api.get('/tabelas'),\n  get: tipo => api.get(`/tabelas/${tipo}`),\n  calculate: (tipo, data) => api.post(`/tabelas/${tipo}/calculate`, data)\n};\nexport const estoqueService = {\n  list: () => api.get('/estoque'),\n  get: id => api.get(`/estoque/${id}`),\n  update: (id, data) => api.put(`/estoque/${id}`, data),\n  addMovement: data => api.post('/estoque/movements', data),\n  getMovements: params => api.get('/estoque/movements', {\n    params\n  })\n};\nexport const relatoriosService = {\n  generate: data => api.post('/relatorios/generate', data),\n  get: id => api.get(`/relatorios/${id}`),\n  list: params => api.get('/relatorios', {\n    params\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","email","senha","post","register","nome","verify","get","pacientesService","list","params","id","data","update","put","delete","avaliacoesService","getTestes","tabelasService","tipo","calculate","estoqueService","addMovement","getMovements","relatoriosService","generate"],"sources":["D:/zite/palografico/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\nexport const api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Interceptor para adicionar token automaticamente\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptor para tratar respostas e erros\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Serviços específicos\r\nexport const authService = {\r\n  login: (email, senha) => api.post('/auth/login', { email, senha }),\r\n  register: (nome, email, senha) => api.post('/auth/register', { nome, email, senha }),\r\n  verify: () => api.get('/auth/verify'),\r\n};\r\n\r\nexport const pacientesService = {\r\n  list: (params) => api.get('/pacientes', { params }),\r\n  get: (id) => api.get(`/pacientes/${id}`),\r\n  create: (data) => api.post('/pacientes', data),\r\n  update: (id, data) => api.put(`/pacientes/${id}`, data),\r\n  delete: (id) => api.delete(`/pacientes/${id}`),\r\n};\r\n\r\nexport const avaliacoesService = {\r\n  list: (params) => api.get('/avaliacoes', { params }),\r\n  get: (id) => api.get(`/avaliacoes/${id}`),\r\n  create: (data) => api.post('/avaliacoes', data),\r\n  update: (id, data) => api.put(`/avaliacoes/${id}`, data),\r\n  delete: (id) => api.delete(`/avaliacoes/${id}`),\r\n  getTestes: (id) => api.get(`/avaliacoes/${id}/testes`),\r\n};\r\n\r\nexport const tabelasService = {\r\n  list: () => api.get('/tabelas'),\r\n  get: (tipo) => api.get(`/tabelas/${tipo}`),\r\n  calculate: (tipo, data) => api.post(`/tabelas/${tipo}/calculate`, data),\r\n};\r\n\r\nexport const estoqueService = {\r\n  list: () => api.get('/estoque'),\r\n  get: (id) => api.get(`/estoque/${id}`),\r\n  update: (id, data) => api.put(`/estoque/${id}`, data),\r\n  addMovement: (data) => api.post('/estoque/movements', data),\r\n  getMovements: (params) => api.get('/estoque/movements', { params }),\r\n};\r\n\r\nexport const relatoriosService = {\r\n  generate: (data) => api.post('/relatorios/generate', data),\r\n  get: (id) => api.get(`/relatorios/${id}`),\r\n  list: (params) => api.get('/relatorios', { params }),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}